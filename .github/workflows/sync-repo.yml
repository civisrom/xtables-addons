name: Sync Xtables-Addons Repository

on:
  # Запуск по расписанию (еженедельно в понедельник в 3:00 UTC)
  schedule:
    - cron: '0 3 * * 1'
  
  # Возможность ручного запуска
  workflow_dispatch:

jobs:
  sync-repo:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          # Используем токен GitHub с правами записи
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Git user
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      # Настройка SSH для доступа к вашему репозиторию
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      # Добавляем GitHub в известные хосты
      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      # Проверяем SSH ключ
      - name: Test SSH connection
        run: |
          ssh -T git@github.com || echo "SSH connection test complete"
      
      # Переконфигурируем удаленный репозиторий для использования SSH
      - name: Update remote URL to use SSH
        run: |
          git remote set-url origin git@github.com:civisrom/xtables-addons.git
      
      # Добавляем Codeberg репозиторий как remote и получаем данные
      - name: Add Codeberg repository as remote and fetch
        run: |
          git remote add codeberg https://codeberg.org/jengelh/xtables-addons.git
          git fetch codeberg || echo "Failed to fetch from Codeberg but continuing..."
      
      - name: Check for changes
        id: check_changes
        run: |
          # Проверяем существование удаленной ветки
          if git rev-parse --verify codeberg/master &>/dev/null; then
            echo "Upstream branch codeberg/master found."
            
            # Получаем хеши коммитов
            LATEST_CODEBERG_COMMIT=$(git rev-parse codeberg/master)
            LATEST_LOCAL_COMMIT=$(git rev-parse HEAD)
            
            echo "Codeberg commit: $LATEST_CODEBERG_COMMIT"
            echo "Local commit: $LATEST_LOCAL_COMMIT"
            
            if [ "$LATEST_CODEBERG_COMMIT" != "$LATEST_LOCAL_COMMIT" ]; then
              echo "Commits are different. Checking for file differences..."
              
              # Проверяем наличие изменений (с обработкой ошибок)
              if git diff --exit-code HEAD..codeberg/master &>/dev/null; then
                echo "changes_detected=false" >> "$GITHUB_OUTPUT"
                echo "Commits are different but no file changes detected."
              else
                echo "changes_detected=true" >> "$GITHUB_OUTPUT"
                echo "Changes detected in files."
                
                # Получаем информацию о коммитах только если есть изменения
                COMMIT_COUNT=$(git rev-list --count HEAD..codeberg/master 2>/dev/null) || COMMIT_COUNT="несколько"
                # Используем base64 для безопасной передачи сообщения коммита
                LAST_COMMIT_MSG=$(git log -1 --pretty=format:"%s" codeberg/master 2>/dev/null | base64) || LAST_COMMIT_MSG=$(echo "Sync from Codeberg" | base64)
                COMMIT_AUTHORS=$(git log --pretty=format:"%an" HEAD..codeberg/master 2>/dev/null | sort | uniq | head -3 | tr '\n' ', ' | sed 's/,$//' | sed 's/,/, /g' | base64) || COMMIT_AUTHORS=$(echo "upstream contributors" | base64)
                
                echo "commit_count=$COMMIT_COUNT" >> "$GITHUB_OUTPUT"
                echo "last_commit_msg=$LAST_COMMIT_MSG" >> "$GITHUB_OUTPUT"
                echo "commit_authors=$COMMIT_AUTHORS" >> "$GITHUB_OUTPUT"
              fi
            else
              echo "changes_detected=false" >> "$GITHUB_OUTPUT"
              echo "Repositories are already in sync."
            fi
          else
            echo "Failed to find codeberg/master branch. Check remote URL and connection."
            echo "changes_detected=false" >> "$GITHUB_OUTPUT"
            exit 0
          fi
      
      - name: Sync changes if detected
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          echo "Starting sync process..."
          
          # Декодируем значения из base64
          COMMIT_COUNT="${{ steps.check_changes.outputs.commit_count }}"
          LAST_COMMIT_MSG=$(echo "${{ steps.check_changes.outputs.last_commit_msg }}" | base64 --decode)
          COMMIT_AUTHORS=$(echo "${{ steps.check_changes.outputs.commit_authors }}" | base64 --decode)
          
          # Экранируем специальные символы в сообщении коммита
          LAST_COMMIT_MSG_SAFE=$(echo "$LAST_COMMIT_MSG" | sed 's/["`$\\]/\\&/g')
          COMMIT_AUTHORS_SAFE=$(echo "$COMMIT_AUTHORS" | sed 's/["`$\\]/\\&/g')
          
          # Формируем информативное сообщение коммита
          if [ "$COMMIT_COUNT" = "1" ]; then
            COMMIT_MSG="Sync: $LAST_COMMIT_MSG_SAFE"
          else
            COMMIT_MSG="Sync: $COMMIT_COUNT commits from Codeberg by $COMMIT_AUTHORS_SAFE"
          fi
          
          echo "Prepared commit message. Creating new branch for changes..."
          
          # Создаем новую ветку и переключаемся на нее
          SYNC_BRANCH="sync-codeberg-$(date +%Y%m%d%H%M%S)"
          git checkout -b "$SYNC_BRANCH"
          
          # Метод 1: Пытаемся применить изменения с помощью git reset
          if git fetch codeberg master && git reset --hard FETCH_HEAD; then
            echo "Reset to Codeberg master successful"
            git push origin "$SYNC_BRANCH"
            echo "Changes pushed to branch: $SYNC_BRANCH"
            echo "Please review and manually merge this branch."
            exit 0
          fi
          
          echo "Reset method failed, trying rebase method..."
          
          # Метод 2: Пытаемся использовать rebase для применения изменений
          git fetch codeberg
          if git rebase codeberg/master; then
            echo "Rebase successful"
            git push origin "$SYNC_BRANCH"
            echo "Changes pushed to branch: $SYNC_BRANCH after rebase"
            echo "Please review and manually merge this branch."
            exit 0
          fi
          
          echo "All sync methods failed. Please check the logs and try again."
          exit 1
      
      - name: Report sync status
        if: always()
        run: |
          if [ "${{ steps.check_changes.outputs.changes_detected }}" = "true" ]; then
            echo "✅ Repository sync attempted with Codeberg changes"
          else
            echo "ℹ️ No changes detected in the upstream repository"
          fi
